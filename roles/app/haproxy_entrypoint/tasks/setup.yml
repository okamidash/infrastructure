---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - haproxy_wireguard_entry_host is defined
      - haproxy_wireguard_subnet is defined

- name: "Enable the fedora Wireguard copr repo"
  command:
    cmd: "dnf copr enable -y jdoss/wireguard"
    warn: no

- name: "Update all packages"
  dnf:
    name: "*"
    state: "latest"
- name: "Install haproxy and other utilities"
  dnf:
    name:
      - "haproxy"
      - "dnf-automatic"
      - "wireguard-tools"
      - "wireguard-dkms"
      - "kernel-headers"
      - "fail2ban-all"
      - "freeipa-client"
      - "anacron"
    state: present

- name: "Reboot the machine"
  reboot:

- name: "Enable dnf-automatic"
  systemd:
    name: "dnf-automatic-install.timer"
    state: started
    enabled: yes

- name: "Setup FirewallD"
  firewalld:
    port: "{{ item }}"
    permanent: yes
    immediate: yes
    state: enabled
  with_list:
    - "55107/udp"
    - "55107/tcp"
    - "55108/tcp"

- name: "Grab wireguard public key from {{ haproxy_wireguard_entry_host }}"
  vyos_command:
    commands:
      - "cat wireguard.pubkey"
  register: wireguard_client_publickey
  delegate_to: "{{ haproxy_wireguard_entry_host }}"

- name: "Create wireguard private key"
  command: "wg genkey"
  register: wireguard_server_privatekey

- name: "Create wireguard public key"
  shell: "echo '{{ wireguard_server_privatekey.stdout }}' | wg pubkey"
  register: wireguard_server_publickey

- debug: msg="{{ wireguard_server_publickey.stdout }}"
- name: "Set wireguard keys"
  set_fact:
    wireguard_client_publickey: "{{ wireguard_client_publickey.stdout }}"
    wireguard_server_publickey: "{{ wireguard_server_publickey.stdout }}"
    wireguard_server_privatekey: "{{ wireguard_server_privatekey.stdout }}"

- name: "Create wireguard dir"
  file:
    path: /etc/wireguard
    state: directory
    owner: root
    group: wheel
    mode: '0750'

- name: "Create list of networks"
  set_fact:
    subnets: |
      {% for network,opts in networks.items() %}
      - {{ opts.gateway }}
      {% endfor %}
- name: "Template out the wireguard server config"
  template:
    src: wireguard.conf.j2
    dest: /etc/wireguard/wg0.conf
    owner: root
    group: wheel
    mode: 0750

- name: "Enable and start wireguard"
  systemd:
    name: wg-quick@wg0
    state: restarted

- name: "Template out eclipse config"
  vyos_config:
    src: vyos.conf.j2
    save: yes
  delegate_to: "{{ haproxy_wireguard_entry_host }}"

- name: "Download dh-param-file"
  get_url:
    url: "https://ssl-config.mozilla.org/ffdhe2048.txt"
    dest: "/etc/haproxy/dh-param"
    owner: root
    group: wheel
    mode: '0440'


